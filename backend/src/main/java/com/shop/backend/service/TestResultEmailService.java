package com.shop.backend.service;

import com.shop.backend.dto.depression.DepressionTestResponse;
import com.shop.backend.model.User;
import com.shop.backend.repository.UserRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Service;
import jakarta.mail.internet.MimeMessage;
import java.time.format.DateTimeFormatter;
import java.util.Locale;

@Service
public class TestResultEmailService {
    
    @Autowired
    private JavaMailSender mailSender;
    
    @Autowired
    private UserRepository userRepository;
    
    public void sendTestResultEmail(Long userId, DepressionTestResponse testResponse, String testType) {
        try {
            User user = userRepository.findById(userId)
                .orElseThrow(() -> new RuntimeException("User not found"));
            
            String userName = user.getFirstName() != null && user.getLastName() != null 
                ? user.getFirstName() + " " + user.getLastName() 
                : user.getEmail();
            
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");
            helper.setTo(user.getEmail());
            helper.setSubject("[MindMeter] K·∫øt qu·∫£ b√†i test " + testType + " c·ªßa b·∫°n");
            
            String html = generateTestResultEmail(userName, testResponse, testType);
            helper.setText(html, true);
            
            mailSender.send(message);
            
        } catch (Exception e) {
            // Log error but don't throw to avoid affecting test submission
            System.err.println("Failed to send test result email: " + e.getMessage());
        }
    }
    
    private String generateTestResultEmail(String userName, DepressionTestResponse testResponse, String testType) {
        String severityText = getSeverityText(testResponse.getSeverityLevel());
        String severityColor = getSeverityColor(testResponse.getSeverityLevel());
        String recommendation = getRecommendationText(testResponse.getSeverityLevel());
        String contactExpert = testResponse.getShouldContactExpert() ? 
            "<div style='background:#fef2f2;border:1px solid #fecaca;border-radius:8px;padding:16px;margin:16px 0;'>" +
                            "<h3 style='color:#dc2626;margin:0 0 8px 0;'>[WARNING] Khuy·∫øn ngh·ªã quan tr·ªçng</h3>" +
            "<p style='margin:0;color:#991b1b;'>D·ª±a tr√™n k·∫øt qu·∫£ test, ch√∫ng t√¥i khuy·∫øn ngh·ªã b·∫°n n√™n t√¨m ki·∫øm s·ª± h·ªó tr·ª£ chuy√™n m√¥n t·ª´ chuy√™n gia t√¢m l√Ω.</p>" +
            "</div>" : "";
        
        return String.format("""
            <div style='max-width:600px;margin:40px auto;background:#fff;border-radius:16px;box-shadow:0 4px 24px rgba(0,0,0,0.1);padding:32px;font-family:Segoe UI,Roboto,Arial,sans-serif;'>
              <div style='text-align:center;margin-bottom:32px;'>
                <div style='font-size:2rem;font-weight:700;color:#2563eb;letter-spacing:1px;margin-bottom:8px;'>MindMeter</div>
                <div style='font-size:1.1rem;color:#64748b;'>K·∫øt qu·∫£ b√†i test t√¢m l√Ω c·ªßa b·∫°n</div>
              </div>
              
              <div style='margin-bottom:24px;'>
                <h2 style='color:#1e293b;margin:0 0 16px 0;font-size:1.5rem;'>Xin ch√†o %s,</h2>
                <p style='margin:0;line-height:1.6;color:#475569;font-size:1rem;'>
                  C·∫£m ∆°n b·∫°n ƒë√£ ho√†n th√†nh b√†i test <strong>%s</strong>. D∆∞·ªõi ƒë√¢y l√† k·∫øt qu·∫£ chi ti·∫øt:
                </p>
              </div>
              
              <div style='background:#f8fafc;border-radius:12px;padding:24px;margin:24px 0;'>
                <h3 style='color:#1e293b;margin:0 0 16px 0;font-size:1.25rem;'>K·∫øt qu·∫£ test</h3>
                
                <div style='display:grid;grid-template-columns:1fr 1fr;gap:16px;margin-bottom:16px;'>
                  <div style='text-align:center;padding:16px;background:#fff;border-radius:8px;border:1px solid #e2e8f0;'>
                    <div style='font-size:0.875rem;color:#64748b;margin-bottom:4px;'>ƒêi·ªÉm s·ªë</div>
                    <div style='font-size:1.5rem;font-weight:700;color:#1e293b;'>%d</div>
                  </div>
                  <div style='text-align:center;padding:16px;background:#fff;border-radius:8px;border:1px solid #e2e8f0;'>
                    <div style='font-size:0.875rem;color:#64748b;margin-bottom:4px;'>M·ª©c ƒë·ªô</div>
                    <div style='font-size:1.25rem;font-weight:600;%s'>%s</div>
                  </div>
                </div>
                
                <div style='text-align:center;padding:16px;background:#fff;border-radius:8px;border:1px solid #e2e8f0;'>
                  <div style='font-size:0.875rem;color:#64748b;margin-bottom:4px;'>Th·ªùi gian test</div>
                  <div style='font-size:1rem;color:#1e293b;'>%s</div>
                </div>
              </div>
              
              <div style='background:#f0f9ff;border:1px solid #bae6fd;border-radius:8px;padding:16px;margin:16px 0;'>
                <h3 style='color:#0369a1;margin:0 0 8px 0;font-size:1.125rem;'>[INFO] Khuy·∫øn ngh·ªã</h3>
                <p style='margin:0;color:#0c4a6e;line-height:1.5;'>%s</p>
              </div>
              
              %s
              
              <div style='background:#f0fdf4;border:1px solid #bbf7d0;border-radius:8px;padding:16px;margin:16px 0;'>
                <h3 style='color:#166534;margin:0 0 8px 0;font-size:1.125rem;'>üîó H√†nh ƒë·ªông ti·∫øp theo</h3>
                <ul style='margin:0;padding-left:20px;color:#166534;line-height:1.5;'>
                  <li>Xem chi ti·∫øt k·∫øt qu·∫£ trong ·ª©ng d·ª•ng MindMeter</li>
                  <li>L∆∞u tr·ªØ k·∫øt qu·∫£ ƒë·ªÉ theo d√µi ti·∫øn tr√¨nh</li>
                  <li>Th·ª±c hi·ªán test ƒë·ªãnh k·ª≥ ƒë·ªÉ ƒë√°nh gi√° s·ª± thay ƒë·ªïi</li>
                  <li>Li√™n h·ªá chuy√™n gia n·∫øu c·∫ßn t∆∞ v·∫•n th√™m</li>
                </ul>
              </div>
              
              <div style='text-align:center;margin-top:32px;padding-top:24px;border-top:1px solid #e2e8f0;'>
                <p style='margin:0 0 16px 0;color:#64748b;font-size:0.875rem;'>
                  N·∫øu c√≥ b·∫•t k·ª≥ th·∫Øc m·∫Øc n√†o, h√£y li√™n h·ªá v·ªõi ch√∫ng t√¥i:
                </p>
                <div style='display:flex;justify-content:center;gap:16px;flex-wrap:wrap;'>
                  <a href='tel:0369702376' style='display:inline-flex;align-items:center;gap:8px;padding:12px 20px;background:#2563eb;color:#fff;text-decoration:none;border-radius:8px;font-weight:500;'>
                    0369 702 376
                  </a>
                  <a href='mailto:trankiencuong30072003@gmail.com' style='display:inline-flex;align-items:center;gap:8px;padding:12px 20px;background:#10b981;color:#fff;text-decoration:none;border-radius:8px;font-weight:500;'>
                    [EMAIL] Email h·ªó tr·ª£
                  </a>
                </div>
              </div>
              
              <div style='text-align:center;margin-top:24px;padding-top:16px;border-top:1px solid #e2e8f0;'>
                <p style='margin:0;color:#94a3b8;font-size:0.875rem;line-height:1.5;'>
                  Tr√¢n tr·ªçng,<br>
                  <strong>ƒê·ªôi ng≈© MindMeter</strong><br>
                  <span style='font-size:0.8rem;'>H·ªó tr·ª£ s·ª©c kh·ªèe t√¢m th·∫ßn 24/7</span>
                </p>
              </div>
            </div>
            """, 
            userName, 
            testType, 
            testResponse.getTotalScore(),
            severityColor,
            severityText,
            testResponse.getTestedAt().format(DateTimeFormatter.ofPattern("HH:mm - dd/MM/yyyy", Locale.forLanguageTag("vi-VN"))),
            recommendation,
            contactExpert
        );
    }
    
    private String getSeverityText(String severityLevel) {
        switch (severityLevel) {
            case "MINIMAL": return "B√¨nh th∆∞·ªùng";
            case "MILD": return "Tr·∫ßm c·∫£m nh·∫π";
            case "MODERATE": return "Tr·∫ßm c·∫£m v·ª´a";
            case "SEVERE": return "Tr·∫ßm c·∫£m n·∫∑ng";
            default: return "Kh√¥ng x√°c ƒë·ªãnh";
        }
    }
    
    private String getSeverityColor(String severityLevel) {
        switch (severityLevel) {
            case "MINIMAL": return "color:#059669;";
            case "MILD": return "color:#d97706;";
            case "MODERATE": return "color:#ea580c;";
            case "SEVERE": return "color:#dc2626;";
            default: return "color:#64748b;";
        }
    }
    
    private String getRecommendationText(String severityLevel) {
        switch (severityLevel) {
            case "MINIMAL":
                return "T√¨nh tr·∫°ng t√¢m l√Ω c·ªßa b·∫°n hi·ªán t·∫°i ·ªïn ƒë·ªãnh. H√£y duy tr√¨ l·ªëi s·ªëng l√†nh m·∫°nh v√† th·ª±c hi·ªán test ƒë·ªãnh k·ª≥ ƒë·ªÉ theo d√µi.";
            case "MILD":
                return "B·∫°n c√≥ d·∫•u hi·ªáu tr·∫ßm c·∫£m nh·∫π. H√£y ch√∫ √Ω ƒë·∫øn s·ª©c kh·ªèe t√¢m th·∫ßn, th·ª±c hi·ªán c√°c ho·∫°t ƒë·ªông th∆∞ gi√£n v√† c√¢n nh·∫Øc t√¨m ki·∫øm s·ª± h·ªó tr·ª£.";
            case "MODERATE":
                return "B·∫°n c√≥ d·∫•u hi·ªáu tr·∫ßm c·∫£m v·ª´a. Ch√∫ng t√¥i khuy·∫øn ngh·ªã b·∫°n n√™n t√¨m ki·∫øm s·ª± h·ªó tr·ª£ t·ª´ chuy√™n gia t√¢m l√Ω ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n ph√π h·ª£p.";
            case "SEVERE":
                return "B·∫°n c√≥ d·∫•u hi·ªáu tr·∫ßm c·∫£m n·∫∑ng. ƒêi·ªÅu n√†y c·∫ßn ƒë∆∞·ª£c quan t√¢m ƒë·∫∑c bi·ªát. H√£y li√™n h·ªá ngay v·ªõi chuy√™n gia t√¢m l√Ω ƒë·ªÉ ƒë∆∞·ª£c h·ªó tr·ª£ k·ªãp th·ªùi.";
            default:
                return "H√£y tham kh·∫£o √Ω ki·∫øn chuy√™n gia ƒë·ªÉ ƒë∆∞·ª£c ƒë√°nh gi√° ch√≠nh x√°c h∆°n v·ªÅ t√¨nh tr·∫°ng c·ªßa b·∫°n.";
        }
    }
}
