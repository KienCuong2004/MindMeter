spring.application.name=MindMeter Backend

# HTTP Encoding Configuration
server.servlet.encoding.charset=UTF-8
server.servlet.encoding.enabled=true
server.servlet.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

# Jackson JSON Encoding
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.encoding.charset=UTF-8

# Database Connection Encoding
spring.datasource.hikari.connection-init-sql=SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci
spring.jpa.properties.hibernate.connection.characterEncoding=utf8
spring.jpa.properties.hibernate.connection.useUnicode=true
spring.jpa.properties.hibernate.connection.charSet=utf8

# Hibernate/JPA Encoding Configuration
spring.jpa.properties.hibernate.connection.characterEncoding=utf8
spring.jpa.properties.hibernate.connection.useUnicode=true
spring.jpa.properties.hibernate.connection.charSet=utf8

# Additional Encoding Configuration
spring.datasource.hikari.connection-init-sql=SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/mindmeter?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC&useUnicode=true&characterEncoding=UTF-8
spring.datasource.username=your_db_username
spring.datasource.password=your_strong_db_password
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false

# HikariCP Connection Pool Configuration - DDoS Protection Optimized
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.maximum-pool-size=50
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.leak-detection-threshold=60000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.initialization-fail-timeout=1
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.pool-name=MindMeterHikariCP

# DDoS Protection - Connection Pool Limits
spring.datasource.hikari.register-mbeans=true
spring.datasource.hikari.allow-pool-suspension=false
spring.datasource.hikari.isolate-internal-queries=false
spring.datasource.hikari.keepalive-time=120000

# HikariCP Performance Tuning
spring.datasource.hikari.data-source-properties.cachePrepStmts=true
spring.datasource.hikari.data-source-properties.prepStmtCacheSize=250
spring.datasource.hikari.data-source-properties.prepStmtCacheSqlLimit=2048
spring.datasource.hikari.data-source-properties.useServerPrepStmts=true
spring.datasource.hikari.data-source-properties.useLocalSessionState=true
spring.datasource.hikari.data-source-properties.rewriteBatchedStatements=true
spring.datasource.hikari.data-source-properties.cacheResultSetMetadata=true
spring.datasource.hikari.data-source-properties.cacheServerConfiguration=true
spring.datasource.hikari.data-source-properties.elideSetAutoCommits=true
spring.datasource.hikari.data-source-properties.maintainTimeStats=false

# JWT Configuration
jwt.secret=your_jwt_secret_key_here_minimum_256_bits_replace_this_with_strong_random_key
jwt.expiration=86400000

# Email Configuration (Gmail SMTP)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=your_email@gmail.com
spring.mail.password=your_gmail_app_password_here
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# Frontend URL
app.frontend-url=http://localhost:3000

# Google OAuth2
spring.security.oauth2.client.registration.google.client-id=your_google_client_id_here.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=your_google_client_secret_here
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-name=Google

# Google OAuth2 Provider Configuration
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v2/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# OAuth2 Session Management
spring.security.oauth2.client.registration.google.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=openid,profile,email

# Feedback and Contact
feedback.receiver=your_feedback_email@gmail.com
contact.receiver.email=your_contact_email@gmail.com

# PayPal Configuration
paypal.client.id=your_paypal_client_id_here
paypal.client.secret=your_paypal_client_secret_here
paypal.mode=sandbox

# App URLs
app.base.url=http://localhost:3000
app.backend.url=http://localhost:8080

# OpenAI API Key
OPENAI_API_KEY=sk-proj-your_openai_api_key_here

# Java System Properties
java.net.preferIPv4Stack=true
spring.main.allow-bean-definition-overriding=true

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

# Connection Pool Monitoring & Health Checks
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.health.db.enabled=true
management.health.hikari.enabled=true

# Metrics Configuration
management.metrics.export.prometheus.enabled=true
management.metrics.tags.application=mindmeter
management.metrics.tags.environment=${SPRING_PROFILES_ACTIVE:dev}

# Logging for Connection Pool (set to INFO for production, DEBUG for development)
logging.level.com.zaxxer.hikari=INFO
logging.level.com.zaxxer.hikari.HikariConfig=INFO
logging.level.com.zaxxer.hikari.pool.HikariPool=INFO

# Cache Configuration - Enhanced for Phase 1
cache.enabled=true
cache.type=local
cache.local.max-size=1000
cache.local.expire-after-write=3600
cache.redis.default-ttl=1800

# Caffeine Cache Configuration
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=1h
spring.cache.cache-names=users,testResults,appointments,blogPosts,statistics,testQuestions,expertSchedules

# Redis Configuration (Optional - for distributed caching)
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.database=0
spring.data.redis.timeout=2000ms
spring.data.redis.jedis.pool.max-active=20
spring.data.redis.jedis.pool.max-idle=10
spring.data.redis.jedis.pool.min-idle=5

# Enhanced Monitoring & Metrics
management.endpoints.web.exposure.include=health,info,metrics,prometheus,hikaricp,caches
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
management.health.db.enabled=true
management.health.hikari.enabled=true
management.health.redis.enabled=true

# HikariCP Configuration
management.endpoint.hikaricp.enabled=true
management.endpoint.hikaricp.show-details=always
management.endpoints.web.base-path=/actuator
management.endpoints.web.cors.allowed-origins=*
management.endpoints.web.cors.allowed-methods=GET,POST

# Performance Monitoring
management.metrics.export.prometheus.enabled=true
management.metrics.tags.application=mindmeter
management.metrics.tags.environment=${SPRING_PROFILES_ACTIVE:dev}
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.distribution.sla.http.server.requests=100ms,500ms,1s,2s,5s

# Security Headers Enhancement
server.servlet.session.cookie.http-only=false
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.same-site=lax

# VNPay Configuration
# Get your credentials from: https://sandbox.vnpayment.vn/
vnpay.tmnCode=your_vnpay_terminal_code_here
vnpay.hashSecret=your_vnpay_hash_secret_here
vnpay.payUrl=https://sandbox.vnpayment.vn/paymentv2/vpcpay.html
vnpay.returnUrl=http://localhost:3000/payment/vnpay/return
vnpay.ipnUrl=http://localhost:8080/api/payment/vnpay/ipn

# IP Filtering & Security Configuration
# For development: set enabled=false
# For production: set enabled=true and configure allowed/blocked countries
security.ip-filtering.enabled=false
security.ip-filtering.block-tor=true
security.ip-filtering.block-vpn=false
security.ip-filtering.allowed-countries=VN,US,GB,CA,AU,DE,FR,JP,KR,SG
security.ip-filtering.blocked-countries=CN,RU,KP,IR

# Security Headers
security.headers.frame-options=DENY
security.headers.content-type-options=nosniff
security.headers.xss-protection=1; mode=block
security.headers.strict-transport-security=max-age=31536000; includeSubDomains

# IP Filtering Logging (INFO for production, DEBUG for development)
logging.level.com.shop.backend.service.IpFilteringService=INFO
logging.level.com.shop.backend.interceptor.IpFilteringInterceptor=INFO
