name: Deploy to Production

on:
  push:
    branches: [master]
    tags:
      - "v*"
  workflow_dispatch:

env:
  NODE_VERSION: "18"
  JAVA_VERSION: "11"

jobs:
  # Build and Deploy Frontend
  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Build production
        working-directory: ./frontend
        run: npm run build
        env:
          REACT_APP_API_URL: ${{ vars.REACT_APP_API_URL || 'http://localhost:8080' }}
          REACT_APP_ENVIRONMENT: production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-production-build
          path: frontend/build/
          retention-days: 90

      - name: Deploy notification
        run: |
          echo "Frontend build completed successfully"
          echo "Build artifacts uploaded and ready for deployment"

  # Build and Deploy Backend
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: "temurin"

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build production package
        working-directory: ./backend
        run: mvn clean package -DskipTests -Dmaven.compiler.source=11 -Dmaven.compiler.target=11

      - name: Upload JAR artifacts
        uses: actions/upload-artifact@v4
        with:
          name: backend-production-jar
          path: backend/target/*.jar
          retention-days: 90

      - name: Deploy notification
        run: |
          echo "Backend build completed successfully"
          echo "JAR artifacts uploaded and ready for deployment"

  # Create Release
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [deploy-frontend, deploy-backend]
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Download frontend artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-production-build
          path: ./release/frontend

      - name: Download backend artifacts
        uses: actions/download-artifact@v4
        with:
          name: backend-production-jar
          path: ./release/backend

      - name: Create release archive
        run: |
          cd release
          zip -r ../mindmeter-${{ steps.get_version.outputs.VERSION }}.zip .
          cd ..

      - name: Generate changelog
        id: changelog
        run: |
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          git log --pretty=format:"- %s (%h)" $(git describe --tags --abbrev=0 HEAD^)..HEAD >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: MindMeter ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## MindMeter Release ${{ steps.get_version.outputs.VERSION }}

            ### What's Changed
            ${{ steps.changelog.outputs.CHANGELOG }}

            ### Installation
            1. Download the release archive
            2. Extract files to your server
            3. Configure environment variables
            4. Deploy frontend and backend

            ### System Requirements
            - Node.js 18+
            - Java 11+
            - MySQL 8.0+
          files: |
            mindmeter-${{ steps.get_version.outputs.VERSION }}.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Deployment Summary
  deployment-summary:
    name: Deployment Summary
    runs-on: ubuntu-latest
    needs: [deploy-frontend, deploy-backend]
    if: always()

    steps:
      - name: Summary
        run: |
          echo "### Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Frontend | ${{ needs.deploy-frontend.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Backend | ${{ needs.deploy-backend.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Build Date:** $(date)" >> $GITHUB_STEP_SUMMARY
          echo "**Git SHA:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
